from dotenv import load_dotenv
import importlib
import sqlite3
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ChatMember
from telegram.ext import Application, CommandHandler, MessageHandler, filters, JobQueue, ChatMemberHandler, CallbackQueryHandler, ConversationHandler, ContextTypes
import asyncio
from telegram.constants import ParseMode
from collections import defaultdict
import html
import datetime
print(datetime.__file__)

# ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ö–∞–±–∞—Ä–ª–∞—Ä–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à —É—á—É–Ω dict
user_messages = defaultdict(list)

# üö´ –ê–Ω—Ç–∏-—Ñ–ª—É–¥ —Ñ—É–Ω–∫—Ü–∏—è—Å–∏
async def anti_flood(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # ‚úÖ –•–∞–±–∞—Ä `update.message` –±—û–ª–º–∞—Å–∞, “≥–µ—á –Ω–∞—Ä—Å–∞ “õ–∏–ª–º–∞–π–º–∏–∑
    if update.message is None:
        return

    user_id = update.message.from_user.id
    chat_id = update.message.chat_id
    current_time = datetime.datetime.now()

    # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ö–∞–±–∞—Ä –≤–∞“õ—Ç–∏–Ω–∏ —Å–∞“õ–ª–∞–π–º–∏–∑
    user_messages[user_id].append(current_time)

    # –§–∞“õ–∞—Ç –æ—Ö–∏—Ä–≥–∏ 5 —Å–æ–Ω–∏—è –∏—á–∏–¥–∞–≥–∏ —Ö–∞–±–∞—Ä–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞–π–º–∏–∑
    user_messages[user_id] = [
        msg_time for msg_time in user_messages[user_id]
        if (current_time - msg_time).total_seconds() <= 5
    ]

    if len(user_messages[user_id]) >= 3:
        await update.message.delete()  # ‚úÖ 3-—Ç–∞ —Ö–∞–±–∞—Ä–¥–∞–Ω –æ—à—Å–∞, —û—á–∏—Ä–∏–ª–∞–¥–∏
        warning_msg = await context.bot.send_message(
            chat_id=chat_id,
            text=f"üö® {update.message.from_user.first_name}, –∏–ª—Ç–∏–º–æ—Å, —Å–ø–∞–º “õ–∏–ª–º–∞–Ω–≥!",
        )
        await asyncio.sleep(3)  # ‚úÖ 3 —Å–æ–Ω–∏—è–¥–∞–Ω –∫–µ–π–∏–Ω —Ö–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        await warning_msg.delete()

# ‚úÖ –†–µ–≥—É–ª—è—Ä –∏—Ñ–æ–¥–∞–ª–∞—Ä–Ω–∏ –∏–º–ø–æ—Ä—Ç “õ–∏–ª–∏—à
re = importlib.import_module("re")

# ‚úÖ –ë–æ—Ç —É—á—É–Ω TOKEN
load_dotenv()
TOKEN = os.getenv("TOKEN")
CREATOR_ID = int(os.getenv("CREATOR_ID"))  # –ë–æ—Ç–Ω–∏–Ω–≥ —è—Ä–∞—Ç—É–≤—á–∏—Å–∏ ID'—Å–∏
# print(f"CREATOR_ID = {CREATOR_ID} (Type: {type(CREATOR_ID)})") # CREATOR_ID = 200555555 (Type: <class 'int'>)

if not TOKEN:
    print("Xato: .env faylida TOKEN sozlanmagan.")

broadcast_waiting = {}  # üìå CREATOR'–Ω–∏–Ω–≥ –∂–∞–≤–æ–±–∏–Ω–∏ –∫—É—Ç–∏—à —É—á—É–Ω

# üìÇ –§–∞–π–ª –∂–æ–π–ª–∞—à—É–≤–∏
BASE_DIR = os.path.dirname(os.path.abspath(__file__))  # –ñ–æ—Ä–∏–π —Ñ–∞–π–ª –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Å–∏
DB_PATH = os.path.join(BASE_DIR, "users.db")  # –õ–æ–∫–∞–ª –±–∞–∑–∞–Ω–∏ —à—É –µ—Ä–≥–∞ “õ—û—è–º–∏–∑

# üõ† –ë–∞–∑–∞–≥–∞ —É–ª–∞–Ω–∏—à —Ñ—É–Ω–∫—Ü–∏—è—Å–∏
def get_db_connection():
    return sqlite3.connect(DB_PATH) # –ë–∞–∑–∞–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∞–º–∏–∑ /app/users.db

# ‚úÖ "users" –∂–∞–¥–≤–∞–ª–∏–Ω–∏ —è—Ä–∞—Ç–∏—à
def create_users_table():
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

           # –Ø–Ω–≥–∏–ª–∞–Ω–≥–∞–Ω –∫–æ–¥: –ñ–∞–¥–≤–∞–ª –º–∞–≤–∂—É–¥ –±—û–ª—Å–∞, —û—á–∏—Ä–º–∞—Å–¥–∞–Ω —Ñ–∞“õ–∞—Ç —è—Ä–∞—Ç–∏—à
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS users (
                    user_id INTEGER,  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ ID
                    chat_id INTEGER,  -- Guruh ID
                    refer_count INTEGER DEFAULT 0,  -- Takliflar soni
                    write_access INTEGER DEFAULT 0,  -- Yozish huquqi
                    invited_by INTEGER,  -- Taklif qilgan foydalanuvchi ID
                    is_active INTEGER DEFAULT 1,  -- Guruhda qolgan yoki chiqib ketganligini saqlash
                    PRIMARY KEY (user_id, chat_id)  -- Foydalanuvchi + guruh bo‚Äòyicha unikallik
                )
            """)
            conn.commit()
        print("‚úÖ 'users' –∂–∞–¥–≤–∞–ª–∏ –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç–ª–∏ —è—Ä–∞—Ç–∏–ª–¥–∏!")
    except sqlite3.Error as e:
        print(f"‚ùå 'users' –∂–∞–¥–≤–∞–ª–∏–Ω–∏ —è—Ä–∞—Ç–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")

# üõ† "settings" –∂–∞–¥–≤–∞–ª–∏–Ω–∏ —è—Ä–∞—Ç–∏—à
def create_settings_table():
    """`settings` –∂–∞–¥–≤–∞–ª–∏ –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, —è—Ä–∞—Ç–∞–¥–∏."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS settings (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    chat_id INTEGER UNIQUE,  -- –ì—É—Ä—É“≥ ID
                    admin_id INTEGER,  -- –ì—É—Ä—É“≥ –∞–¥–º–∏–Ω–∏ ID
                    restrictions TEXT,  -- –ì—É—Ä—É“≥ —á–µ–∫–ª–æ–≤–ª–∞—Ä–∏ (JSON –∫—û—Ä–∏–Ω–∏—à–∏–¥–∞)
                    min_refer INTEGER DEFAULT 5  -- –ú–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏
                )
            """)
            conn.commit()
            print("‚úÖ 'settings' –∂–∞–¥–≤–∞–ª–∏ –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç–ª–∏ —è—Ä–∞—Ç–∏–ª–¥–∏!")
    except sqlite3.Error as e:
        print(f"‚ùå settings –∂–∞–¥–≤–∞–ª–∏–Ω–∏ —è—Ä–∞—Ç–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")

# üîÑ –ë–∞—Ä—á–∞ –∂–∞–¥–≤–∞–ª–ª–∞—Ä–Ω–∏ —è—Ä–∞—Ç–∏—à
def init_db():
    create_users_table()
    create_settings_table()
    add_groups_if_not_exists()

# –ë–æ—Ç–Ω–∏ –∏—à–≥–∞ —Ç—É—à–∏—Ä–∏—à –±—É–π—Ä—É“ì–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("‚úÖ /start –±—É–π—Ä—É“ì–∏ “õ–∞–±—É–ª “õ–∏–ª–∏–Ω–¥–∏!")  # DEBUG
    await update.message.reply_text("–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º! –°–∏–∑–Ω–∏ @kosonsoytoshkentaksi –≥—Ä—É“≥–∏–≥–∞ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–∞–º–∏–∑!")

print("–ë–æ—Ç –∏—à–≥–∞ —Ç—É—à–º–æ“õ–¥–∞...")

async def get_chat_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat
    await update.message.reply_text(f"üë• –ì—É—Ä—É“≥ ID: `{chat.id}`\nüìõ –ì—É—Ä—É“≥ –Ω–æ–º–∏: {chat.title}", parse_mode="Markdown")

async def start_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """üì¢ CREATOR'–¥–∞–Ω —Ö–∞–±–∞—Ä –æ–ª–∏—à."""
    
    user_id = update.message.from_user.id

    commd = update.message  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±—É–π—Ä—É“ì–∏–Ω–∏ –æ–ª–∏—à

    # ‚úÖ –§–∞“õ–∞—Ç ADMIN_USER_ID'–≥–∞ —Ä—É—Ö—Å–∞—Ç –±–µ—Ä–∏–ª–∞–¥–∏
    if user_id != CREATOR_ID:
        msg = await update.message.reply_text("‚ùå –ë—É –±—É–π—Ä—É“õ —Ñ–∞“õ–∞—Ç –±–æ—Ç —è—Ä–∞—Ç—É–≤—á–∏—Å–∏ —É—á—É–Ω!")
        await asyncio.sleep(4)  # 4 —Å–æ–Ω–∏—è –∫—É—Ç–∏—à
        try:
            await commd.delete()  # –ë—É–π—Ä—É“õ–Ω–∏ —û—á–∏—Ä–∏—à
            await msg.delete()  # –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        except Exception:
            pass  # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –π—û“õ –±—û–ª—Å–∞, –±–æ—Ç –∏—à–¥–∞–Ω —á–∏“õ–º–∞—Å–∏–Ω
        return  # –ê–≥–∞—Ä –∞–¥–º–∏–Ω –±—û–ª–º–∞—Å–∞, —á–∏“õ–∏–± –∫–µ—Ç–∞–º–∏–∑
    
    broadcast_waiting[user_id] = True  # ‚úÖ CREATOR'–Ω–∏–Ω–≥ –∂–∞–≤–æ–±–∏–Ω–∏ –∫—É—Ç–∏—à
    await update.message.reply_text("‚úçÔ∏è –•–∞–±–∞—Ä–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥!\n\nüìå –ù–∞–º—É–Ω–∞:\n<b>Title:</b> –Ø–Ω–≥–∏ —ç—ä–ª–æ–Ω!\nsubtitle: –ë—É–≥—É–Ω–≥–∏ –π–∏“ì–∏–ª–∏—à “≥–∞“õ–∏–¥–∞\n<i>description:</i> –ô–∏“ì–∏–ª–∏—à 18:00 –¥–∞ –±—û–ª–∞–¥–∏.", parse_mode="HTML")

async def handle_broadcast_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """üì¢ CREATOR —Ö–∞–±–∞—Ä —é–±–æ—Ä–≥–∞–Ω–¥–∞, –±–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–≥–∞ —é–±–æ—Ä–∏—à."""
    
    user_id = update.message.from_user.id
    if user_id not in broadcast_waiting or not broadcast_waiting[user_id]:
        return  # –ê–≥–∞—Ä CREATOR —Ö–∞–±–∞—Ä —é–±–æ—Ä–º–∞—ë—Ç–≥–∞–Ω –±—û–ª—Å–∞, —á–∏“õ–∞–º–∏–∑

    del broadcast_waiting[user_id]  # ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω –æ–ª–∏–± —Ç–∞—à–ª–∞—à

    message_text = update.message.text.strip()
    if not message_text:
        await update.message.reply_text("‚ùå –•–∞–±–∞—Ä –±—û—à –±—û–ª–∏—à–∏ –º—É–º–∫–∏–Ω —ç–º–∞—Å!")
        return

    # üìå –•–∞–±–∞—Ä–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–ª–∞—à
    lines = message_text.split("\n")
    title, subtitle, description = "", "", ""

    for line in lines:
        if line.lower().startswith("title:"):
            title = line[6:].strip()
        elif line.lower().startswith("subtitle:"):
            subtitle = line[9:].strip()
        elif line.lower().startswith("description:"):
            description = line[12:].strip()
    
    if not title:
        await update.message.reply_text("‚ùå –•–∞–±–∞—Ä–¥–∞ <b>Title:</b> –±—û–ª–∏—à–∏ —à–∞—Ä—Ç!", parse_mode="HTML")
        return

    formatted_message = f"üì¢ <b>{title}</b>\n"
    if subtitle:
        formatted_message += f"{subtitle}\n"
    if description:
        formatted_message += f"<i>{description}</i>"

    # üìå –£–Ω–∏–∫–∞–ª –≥—É—Ä—É“≥–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏–Ω–∏ –æ–ª–∏—à
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT DISTINCT chat_id FROM users")
        chat_ids = cursor.fetchall()
    
    sent_count = 0
    
    for chat_id in chat_ids:
        chat_id = chat_id[0]
        try:
            await context.bot.send_message(chat_id, formatted_message, parse_mode="HTML")
            sent_count += 1
        except Exception as e:
            print(f"‚ùå {chat_id} –≥—É—Ä—É“≥–∏–≥–∞ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏–± –±—û–ª–º–∞–¥–∏: {e}")

    # ‚úÖ CREATOR'–≥–∞ –Ω–∞—Ç–∏–∂–∞–Ω–∏ —é–±–æ—Ä–∏—à
    await update.message.reply_text(f"‚úÖ –•–∞–±–∞—Ä {sent_count} —Ç–∞ –≥—É—Ä—É“≥–≥–∞ —é–±–æ—Ä–∏–ª–¥–∏!", parse_mode="HTML")

async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """üì¢ CREATOR –±–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–≥–∞ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏—à–∏ –º—É–º–∫–∏–Ω!"""
    
    user_id = update.message.from_user.id
    
    commd = update.message  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±—É–π—Ä—É“ì–∏–Ω–∏ –æ–ª–∏—à

    # ‚úÖ –§–∞“õ–∞—Ç ADMIN_USER_ID'–≥–∞ —Ä—É—Ö—Å–∞—Ç –±–µ—Ä–∏–ª–∞–¥–∏
    if user_id != CREATOR_ID:
        msg = await update.message.reply_text("‚ùå –ë—É –±—É–π—Ä—É“õ —Ñ–∞“õ–∞—Ç –±–æ—Ç —è—Ä–∞—Ç—É–≤—á–∏—Å–∏ —É—á—É–Ω!")
        await asyncio.sleep(4)  # 4 —Å–æ–Ω–∏—è –∫—É—Ç–∏—à
        try:
            await commd.delete()  # –ë—É–π—Ä—É“õ–Ω–∏ —û—á–∏—Ä–∏—à
            await msg.delete()  # –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        except Exception:
            pass  # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –π—û“õ –±—û–ª—Å–∞, –±–æ—Ç –∏—à–¥–∞–Ω —á–∏“õ–º–∞—Å–∏–Ω
        return  # –ê–≥–∞—Ä –∞–¥–º–∏–Ω –±—û–ª–º–∞—Å–∞, —á–∏“õ–∏–± –∫–µ—Ç–∞–º–∏–∑

    # üìå –•–∞–±–∞—Ä –º–∞—Ç–Ω–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
    if not context.args:
        await update.message.reply_text("‚ùå –ò–ª—Ç–∏–º–æ—Å, —Ö–∞–±–∞—Ä –º–∞—Ç–Ω–∏–Ω–∏ “≥–∞–º —é–±–æ—Ä–∏–Ω–≥!\n\n–ú–∞—Å–∞–ª–∞–Ω:\n<code>/broadcast –Ø–Ω–≥–∏ —ç—ä–ª–æ–Ω!</code>", parse_mode="HTML")
        return

    message_text = " ".join(context.args)  # üì© –•–∞–±–∞—Ä –º–∞—Ç–Ω–∏–Ω–∏ –æ–ª–∏—à

    # üìå –£–Ω–∏–∫–∞–ª –≥—É—Ä—É“≥–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏–Ω–∏ –æ–ª–∏—à
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT DISTINCT chat_id FROM users")
        chat_ids = cursor.fetchall()
    
    sent_count = 0  # ‚úÖ “ö–∞–Ω—á–∞ –≥—É—Ä—É“≥–≥–∞ —é–±–æ—Ä–∏–ª–≥–∞–Ω–ª–∏–≥–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
    
    # üì¢ “≤–∞—Ä –±–∏—Ä –≥—É—Ä—É“≥–≥–∞ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏—à
    for chat_id in chat_ids:
        chat_id = chat_id[0]
        try:
            await context.bot.send_message(chat_id, f"üì¢ <b>–≠—ä–ª–æ–Ω:</b>\n{message_text}", parse_mode="HTML")
            sent_count += 1
        except Exception as e:
            print(f"‚ùå {chat_id} –≥—É—Ä—É“≥–∏–≥–∞ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏–± –±—û–ª–º–∞–¥–∏: {e}")

    # ‚úÖ CREATOR'–≥–∞ –Ω–∞—Ç–∏–∂–∞–Ω–∏ —é–±–æ—Ä–∏—à
    await update.message.reply_text(f"‚úÖ –•–∞–±–∞—Ä {sent_count} —Ç–∞ –≥—É—Ä—É“≥–≥–∞ —é–±–æ—Ä–∏–ª–¥–∏!", parse_mode="HTML")

# üîπ –ì—É—Ä—É“≥ –±–∞–∑–∞–≥–∞ “õ—û—à–∏–ª–∏—à–∏ —É—á—É–Ω
def add_group_to_db(chat_id: int):
    """–ì—É—Ä—É“≥–Ω–∏ settings –∂–∞–¥–≤–∞–ª–∏–≥–∞ “õ—û—à–∞–¥–∏, –∞–≥–∞—Ä —É –π—û“õ –±—û–ª—Å–∞."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # –ì—É—Ä—É“≥ –±–∞–∑–∞–¥–∞ –±–æ—Ä-–π—û“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
            cursor.execute("SELECT chat_id FROM settings WHERE chat_id=?", (chat_id,))
            exists = cursor.fetchone()

            if not exists:
                cursor.execute("""
                    INSERT INTO settings (chat_id, min_refer) 
                    VALUES (?, ?)
                """, (chat_id, 1))  # Default referral limit = 1
                conn.commit()
                # print(f"‚úÖ –ì—É—Ä—É“≥ –±–∞–∑–∞–≥–∞ “õ—û—à–∏–ª–¥–∏: {chat_id}")
            # else:
                # print(f"üîπ –ì—É—Ä—É“≥ –æ–ª–¥–∏–Ω–¥–∞–Ω –º–∞–≤–∂—É–¥: {chat_id}")

    except sqlite3.Error as e:
        print(f"‚ùå add_group_to_db(): –•–∞—Ç–æ–ª–∏–∫: {e}")

# üîπ –ë–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–Ω–∏ –±–∞–∑–∞–≥–∞ “õ—û—à–∏—à —É—á—É–Ω –º–∞—Ö—Å—É—Å –∫–æ–¥
def fix_missing_groups():
    """–ë–∞—Ä—á–∞ –º–∞–≤–∂—É–¥ –≥—É—Ä—É“≥–ª–∞—Ä–Ω–∏ settings –∂–∞–¥–≤–∞–ª–∏–≥–∞ “õ—û—à–∏—à."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # –ë–æ—Ç —É–ª–∞–Ω–≥–∞–Ω –≥—É—Ä—É“≥–ª–∞—Ä–Ω–∏ —Ç–æ–ø–∞–º–∏–∑
            cursor.execute("SELECT DISTINCT chat_id FROM users;")
            all_groups = cursor.fetchall()

            for group in all_groups:
                chat_id = group[0]
                add_group_to_db(chat_id)  # –ì—É—Ä—É“≥–Ω–∏ –±–∞–∑–∞–≥–∞ “õ—û—à–∞–º–∏–∑
            
                # üîπ settings –∂–∞–¥–≤–∞–ª–∏–¥–∞ –±–æ—Ä-–π—û“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∞–º–∏–∑
                cursor.execute("SELECT 1 FROM settings WHERE chat_id=?", (chat_id,))
                exists = cursor.fetchone()

                if not exists:
                    # üîπ –ê–≥–∞—Ä settings –∂–∞–¥–≤–∞–ª–∏–¥–∞ –π—û“õ –±—û–ª—Å–∞, “õ—û—à–∞–º–∏–∑
                    cursor.execute("INSERT INTO settings (chat_id, min_refer) VALUES (?, ?)", (chat_id, 1))
                    conn.commit()
                    print(f"‚úÖ –Ø–Ω–≥–∏ –≥—É—Ä—É“≥ –±–∞–∑–∞–≥–∞ “õ—û—à–∏–ª–¥–∏: {chat_id}")

            # print("‚úÖ –ë–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä settings –∂–∞–¥–≤–∞–ª–∏–≥–∞ –º–æ—Å–ª–∞—à—Ç–∏—Ä–∏–ª–¥–∏!")

    except sqlite3.Error as e:
        print(f"‚ùå fix_missing_groups(): –•–∞—Ç–æ–ª–∏–∫: {e}")

# –ë–æ—à–ª–∞—à —É—á—É–Ω “õ—û–Ω“ì–∏—Ä–æ“õ “õ–∏–ª–∏–Ω–≥:
fix_missing_groups()

def add_groups_if_not_exists():
    """–ë–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä —É—á—É–Ω, –∞–≥–∞—Ä —É–ª–∞—Ä `users` –∂–∞–¥–≤–∞–ª–¥–∞ –π—û“õ –±—û–ª—Å–∞, “õ—û—à–∏—à."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # –ì—É—Ä—É“≥–ª–∞—Ä–Ω–∏ `settings` –∂–∞–¥–≤–∞–ª–∏–¥–∞–Ω –æ–ª–∏—à
            cursor.execute("SELECT chat_id FROM settings")
            chat_ids = cursor.fetchall()

            for chat_id_tuple in chat_ids:
                chat_id = chat_id_tuple[0]

                # –ì—É—Ä—É“≥ `users` –±–∞–∑–∞—Å–∏–¥–∞ –±–æ—Ä-–π—û“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
                cursor.execute("SELECT 1 FROM users WHERE chat_id=?", (chat_id,))
                exists = cursor.fetchone()

                if not exists:
                    # –ê–≥–∞—Ä –≥—É—Ä—É“≥ `users` –±–∞–∑–∞—Å–∏–¥–∞ –π—û“õ –±—û–ª—Å–∞, “õ—û—à–∏—à
                    cursor.execute("""
                        INSERT INTO users (user_id, chat_id, refer_count, write_access, invited_by, is_active) 
                        VALUES (?, ?, ?, ?, ?, ?)
                    """, (99999999, chat_id, 0, 0, None, 1))
                    conn.commit()
                    print(f"‚úÖ –Ø–Ω–≥–∏ –≥—É—Ä—É“≥ `users` –±–∞–∑–∞—Å–∏–≥–∞ “õ—û—à–∏–ª–¥–∏: {chat_id}")
                # else:
                    # print(f"‚ö° –ì—É—Ä—É“≥ `users` –±–∞–∑–∞—Å–∏–¥–∞ –∞–ª–ª–∞“õ–∞—á–æ–Ω –º–∞–≤–∂—É–¥: {chat_id}")
    except sqlite3.Error as e:
        print(f"‚ùå add_groups_if_not_exists(): –•–∞—Ç–æ–ª–∏–∫ —é–∑ –±–µ—Ä–¥–∏: {e}")

import sqlite3

def check_user_data():
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("SELECT user_id, chat_id, refer_count, invited_by, is_active FROM users")
    users = cursor.fetchall()
    
#    for user in users:
#        print(f"User ID: {user[0]}, Chat ID: {user[1]}, Referral Count: {user[2]}, Invited By: {user[3]}, Active: {user[4]}")

    conn.close()

check_user_data()

async def handle_chat_member_update(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ì—É—Ä—É“≥–≥–∞ –∫–∏—Ä–≥–∞–Ω —ë–∫–∏ —á–∏“õ“õ–∞–Ω –∞—ä–∑–æ–ª–∞—Ä–Ω–∏ –∫—É–∑–∞—Ç–∏–± –±–æ—Ä–∞–¥–∏."""
    chat_id = update.effective_chat.id
    user_id = update.chat_member.user.id
    status = update.chat_member.new_chat_member.status

    conn = get_db_connection()
    cursor = conn.cursor()

    if status in ["left", "kicked"]:  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —á–∏“õ–∏–± –∫–µ—Ç–≥–∞–Ω —ë–∫–∏ –±–ª–æ–∫–ª–∞–Ω–≥–∞–Ω
        cursor.execute("UPDATE users SET is_active=0 WHERE user_id=? AND chat_id=?", (user_id, chat_id))
        conn.commit()
        print(f"‚ùå {user_id} ID'–ª–∏ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ {chat_id} –≥—É—Ä—É“≥–∏–¥–∞–Ω —á–∏“õ–∏–± –∫–µ—Ç–¥–∏!")
    
    elif status in ["member", "administrator", "creator"]:  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –≥—É—Ä—É“≥–≥–∞ “õ–∞–π—Ç–∞ –∫–∏—Ä–≥–∞–Ω
        cursor.execute("UPDATE users SET is_active=1 WHERE user_id=? AND chat_id=?", (user_id, chat_id))
        conn.commit()
        print(f"‚úÖ {user_id} ID'–ª–∏ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ {chat_id} –≥—É—Ä—É“≥–∏–≥–∞ “õ–∞–π—Ç–∞ “õ—û—à–∏–ª–¥–∏!")

    conn.close()

# üìä –ë–æ—Ç –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏–Ω–∏ –∫—û—Ä–∏—à
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ë–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏–Ω–∏ –∫—û—Ä–∏—à."""
    user_id = update.message.from_user.id # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ ID'—Å–∏ –æ–ª–∏–Ω–∞–¥–∏
    user_name = update.message.from_user.first_name  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –∏—Å–º–∏ –æ–ª–∏–Ω–∞–¥–∏
    commd = update.message  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±—É–π—Ä—É“ì–∏–Ω–∏ –æ–ª–∏—à

    # ‚úÖ –§–∞“õ–∞—Ç ADMIN_USER_ID'–≥–∞ —Ä—É—Ö—Å–∞—Ç –±–µ—Ä–∏–ª–∞–¥–∏
    if user_id != CREATOR_ID:
        msg = await update.message.reply_text("‚ùå –ë—É –±—É–π—Ä—É“õ —Ñ–∞“õ–∞—Ç –±–æ—Ç —è—Ä–∞—Ç—É–≤—á–∏—Å–∏ —É—á—É–Ω!")
        await asyncio.sleep(4)  # 4 —Å–æ–Ω–∏—è –∫—É—Ç–∏—à
        try:
            await commd.delete()  # –ë—É–π—Ä—É“õ–Ω–∏ —û—á–∏—Ä–∏—à
            await msg.delete()  # –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        except Exception:
            pass  # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –π—û“õ –±—û–ª—Å–∞, –±–æ—Ç –∏—à–¥–∞–Ω —á–∏“õ–º–∞—Å–∏–Ω
        return  # –ê–≥–∞—Ä –∞–¥–º–∏–Ω –±—û–ª–º–∞—Å–∞, —á–∏“õ–∏–± –∫–µ—Ç–∞–º–∏–∑
    
    # üìå –ì—É—Ä—É“≥–ª–∞—Ä –≤–∞ –∞—ä–∑–æ–ª–∞—Ä “≥–∞“õ–∏–¥–∞ –º–∞—ä–ª—É–º–æ—Ç –æ–ª–∏—à
    with get_db_connection() as conn:
        cursor = conn.cursor()

        # üìå –£–Ω–∏–∫–∞–ª –≥—É—Ä—É“≥–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
        cursor.execute("SELECT DISTINCT chat_id FROM users")  # –ì—É—Ä—É“≥ ID'—Å–∏–Ω–∏ –æ–ª–∞–º–∏–∑
        chat_ids = cursor.fetchall()  # –ì—É—Ä—É“≥ ID'–ª–∞—Ä–∏ —Ä—û–π—Ö–∞—Ç–∏
        total_groups = len(chat_ids)  # –ì—É—Ä—É“≥–ª–∞—Ä —Å–æ–Ω–∏

        # üìå “≤–∞—Ä –±–∏—Ä –≥—É—Ä—É“≥–¥–∞–≥–∏ –∞—ä–∑–æ–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
        chat_info = ""  # –ì—É—Ä—É“≥–ª–∞—Ä “≥–∞“õ–∏–¥–∞–≥–∏ –º–∞—ä–ª—É–º–æ—Ç–Ω–∏ —Å–∞“õ–ª–∞—à
        total_users = 0  # –ë–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–¥–∞–≥–∏ —É–º—É–º–∏–π –∞—ä–∑–æ–ª–∞—Ä —Å–æ–Ω–∏

        mention = f'<a href="tg://user?id={user_id}">{user_name}</a>' # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –∏—Å–º–∏–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–ª–∞—à

        for chat_id in chat_ids:  # –ì—É—Ä—É“≥ ID'—Å–∏–Ω–∏ –æ–ª–∞–º–∏–∑
            chat_id = chat_id[0]  # –ì—É—Ä—É“≥ ID'—Å–∏

            # üî• –§–∞“õ–∞—Ç –≥—É—Ä—É“≥–ª–∞—Ä –≤–∞ –∫–∞–Ω–∞–ª–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à (—à–∞—Ö—Å–∏–π —á–∞—Ç–ª–∞—Ä–Ω–∏ —á–∏“õ–∞—Ä–∏–± —Ç–∞—à–ª–∞—à)
            if chat_id > 0:
                continue  # –ê–≥–∞—Ä —à–∞—Ö—Å–∏–π —á–∞—Ç –±—û–ª—Å–∞, –¥–∞–≤–æ–º —ç—Ç–∞–º–∏–∑

            try:
                real_user_count = await context.bot.get_chat_member_count(chat_id)  # üìå Telegram API –æ—Ä“õ–∞–ª–∏ –∞—ä–∑–æ–ª–∞—Ä —Å–æ–Ω–∏
                total_users += real_user_count  # ‚úÖ “≤–∞“õ–∏“õ–∏–π –∞—ä–∑–æ–ª–∞—Ä–Ω–∏ “õ—û—à–∏—à
            except Exception:
                continue  # –ê–≥–∞—Ä —Ö–∞—Ç–æ–ª–∏–∫ –±—û–ª—Å–∞, —à—É–Ω—á–∞–∫–∏ —û—Ç–∏–± –∫–µ—Ç–∞–º–∏–∑

            # ‚úÖ –§–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω (—Ñ–∞–æ–ª) –∞—ä–∑–æ–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
            cursor.execute("""
                SELECT COUNT(*)  -- –ê—ä–∑–æ–ª–∞—Ä —Å–æ–Ω–∏
                FROM users  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä –∂–∞–¥–≤–∞–ª–∏
                WHERE chat_id=?  -- –ì—É—Ä—É“≥ ID—Å–∏
                    AND is_active=1  -- –ì—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω –∞—ä–∑–æ–ª–∞—Ä
                """, (chat_id,))
            active_users = cursor.fetchone()[0] or 0  # –ê–≥–∞—Ä None —á–∏“õ—Å–∞, 0 “õ–∞–π—Ç–∞—Ä–∞–º–∏–∑

            # total_users += active_users  # –ë–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–¥–∞–≥–∏ –∞—ä–∑–æ–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à

            # ‚úÖ –Å–∑–∏—à “≥—É“õ—É“õ–∏–≥–∞ —ç–≥–∞ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
            cursor.execute("""
                SELECT COUNT(*)  -- –Å–∑–∏—à –º—É–º–∫–∏–Ω –±—û–ª–≥–∞–Ω –∞—ä–∑–æ–ª–∞—Ä
                FROM users  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä –∂–∞–¥–≤–∞–ª–∏
                WHERE chat_id=?  -- –ì—É—Ä—É“≥ ID—Å–∏
                    AND is_active=1  -- –§–∞“õ–∞—Ç —Ñ–∞–æ–ª –∞—ä–∑–æ–ª–∞—Ä
                    AND write_access=1  -- –Å–∑–∏—à–≥–∞ —Ä—É—Ö—Å–∞—Ç –±–µ—Ä–∏–ª–≥–∞–Ω–ª–∞—Ä
            """, (chat_id,))
            can_write_users = cursor.fetchone()[0] or 0  # –ê–≥–∞—Ä None —á–∏“õ—Å–∞, 0 “õ–∞–π—Ç–∞—Ä–∞–º–∏–∑

            # üìå –ì—É—Ä—É“≥ “≥–∞“õ–∏–¥–∞ Telegram API –æ—Ä“õ–∞–ª–∏ –º–∞—ä–ª—É–º–æ—Ç –æ–ª–∏—à
            try:
                chat = await context.bot.get_chat(chat_id)  # üÜï –ì—É—Ä—É“≥ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏
                chat_title = chat.title  # –ì—É—Ä—É“≥ –Ω–æ–º–∏

                # chat_link = f"https://t.me/{chat.username}" if chat.username else f"tg://openmessage?chat_id={chat_id}"

                if chat.username:
                    chat_link = f"https://t.me/{chat.username}"  # ‚úÖ –ê–≥–∞—Ä username –±—û–ª—Å–∞
                else:
                    #chat_link = f"tg://resolve?domain={chat_id}"  # ‚úÖ –ê–≥–∞—Ä username –π—û“õ –±—û–ª—Å–∞
                    chat_invite_link = await chat.export_invite_link()  # ‚úÖ Invite link –æ–ª–∏—à (–ê–¥–º–∏–Ω –±—û–ª—Å–∞)
                    chat_link = chat_invite_link if chat_invite_link else f"tg://openmessage?chat_id={chat_id}"

                # üìå **–ì—É—Ä—É“≥–¥–∞–≥–∏ “≥–∞“õ–∏“õ–∏–π –∞—ä–∑–æ–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ –æ–ª–∏—à (Telegram API –æ—Ä“õ–∞–ª–∏)**
                real_user_count = await context.bot.get_chat_member_count(chat_id)

            except Exception:
                chat_title = "–ù–æ–º–∞—ä–ª—É–º –≥—É—Ä—É“≥"
                chat_link = f"tg://openmessage?chat_id={chat_id}"
                real_user_count = "‚ùì"  # –ê–≥–∞—Ä —Ö–∞—Ç–æ–ª–∏–∫ –±—û–ª—Å–∞, –Ω–æ–º–∞—ä–ª—É–º “õ–∏–ª–∏–± “õ—û—è–º–∏–∑

            chat_info += (
                f"üìå <a href='{chat_link}'>{chat_title}</a> ‚Äî "
                f"üë§ {real_user_count} —Ä–µ–∞–ª –∞—ä–∑–æ | ‚úÖ {active_users} —Ñ–∞–æ–ª | ‚úçÔ∏è {can_write_users} —ë–∑–∏—à –º—É–º–∫–∏–Ω\n"
            )

    # üìä –ë–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏–Ω–∏ –∂—û–Ω–∞—Ç–∏—à
    stats_message = (  # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö–∞–±–∞—Ä–∏–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–ª–∞—à
        f"üìä <b>–ë–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏</b>\n\n"
        f"üìç –£–ª–∞–Ω–≥–∞–Ω –≥—É—Ä—É“≥–ª–∞—Ä —Å–æ–Ω–∏: <b>{total_groups}</b>\n"
        f"üë• –ë–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–¥–∞–≥–∏ —É–º—É–º–∏–π –∞—ä–∑–æ–ª–∞—Ä: <b>{total_users}</b>\n\n"
        f"{chat_info}" # –ì—É—Ä—É“≥–ª–∞—Ä “≥–∞“õ–∏–¥–∞–≥–∏ –º–∞—ä–ª—É–º–æ—Ç
    )

    await update.message.reply_text(stats_message, parse_mode="HTML") # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∏—à

# üìä –ì—É—Ä—É“≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏–Ω–∏ –∫—û—Ä–∏—à
async def group_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat  # ‚úÖ Chat ID olish uchun
    user_id = update.message.from_user.id

    # üìå –ê–≥–∞—Ä —à–∞—Ö—Å–∏–π —á–∞—Ç –±—û–ª—Å–∞, –±—É–π—Ä—É“õ–Ω–∏ –±–µ–∫–æ—Ä “õ–∏–ª–∞–º–∏–∑
    if chat.type == "private":
        await update.message.reply_text("‚ùå –ë—É –±—É–π—Ä—É“õ —Ñ–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ –∏—à–ª–∞–π–¥–∏.")
        return

    chat_id = chat.id
    commd = update.message

    chat_member = await context.bot.get_chat_member(chat_id, user_id)
    if chat_member.status not in ["administrator", "creator"]:
        try:
            await commd.delete()
        except Exception:
            pass
        return 

    conn = get_db_connection()
    cursor = conn.cursor()

    total_users = await context.bot.get_chat_member_count(chat_id)  # üìå –ì—É—Ä—É“≥–¥–∞–≥–∏ —Ä–µ–∞–ª —é–∑–µ—Ä–ª–∞—Ä —Å–æ–Ω–∏

    # üìå –é—Ä—Ç–∞—á–∞ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
    cursor.execute("""
        SELECT AVG(refer_count)  -- –é—Ä—Ç–∞—á–∞ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏
        FROM users  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä –∂–∞–¥–≤–∞–ª–∏
        WHERE chat_id=?  -- –ì—É—Ä—É“≥ ID—Å–∏
    """, (chat_id,))
    avg_refer = cursor.fetchone()[0] or 0

    # ‚úÖ –ì—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω –∞—ä–∑–æ–ª–∞—Ä–Ω–∏ –æ–ª–∏—à (—Ñ–∞–æ–ª —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä)
    cursor.execute("""
        SELECT user_id  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ ID
        FROM users  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä –∂–∞–¥–≤–∞–ª–∏
        WHERE chat_id=? AND is_active=1  -- –ì—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω –∞—ä–∑–æ–ª–∞—Ä
    """, (chat_id,))
    active_members = {row[0] for row in cursor.fetchall()}  # –ì—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω–ª–∞—Ä set() –∫—û—Ä–∏–Ω–∏—à–∏–¥–∞

    # ‚úÖ –ì—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω –≤–∞ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–∏–Ω–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
    cursor.execute("""
        SELECT invited_by, COUNT(user_id)  -- –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–∏–Ω–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä
        FROM users  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä –∂–∞–¥–≤–∞–ª–∏
        WHERE chat_id=?  -- –ì—É—Ä—É“≥ ID—Å–∏
            AND is_active=1  -- –§–∞–æ–ª –∞—ä–∑–æ–ª–∞—Ä
            AND invited_by IS NOT NULL  -- –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä
        GROUP BY invited_by  -- –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä–Ω–∏ –≥—É—Ä—É“≥–ª–∞—à
        ORDER BY COUNT(user_id) DESC  -- –¢–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏ –±—û–π–∏—á–∞ —Ç–∞—Ä—Ç–∏–±–ª–∞—à
    """, (chat_id,))
    
    all_top_users = cursor.fetchall()
    top_users = [(uid, count) for uid, count in all_top_users if uid in active_members]

    top_users_text = ""
    for i, (uid, count) in enumerate(top_users[:5], start=1):
        try:
            user = await context.bot.get_chat(uid)
            user_name = user.first_name if user.first_name else "–ù–æ–º–∞—ä–ª—É–º"
        except Exception:
            user_name = "–ù–æ–º–∞—ä–ª—É–º"

        top_users_text += f"{i}. <a href='tg://user?id={uid}'>{user_name}</a> - {count} —Ç–∞ —Ç–∞–∫–ª–∏—Ñ\n"

    # ‚úçÔ∏è –•–∞–±–∞—Ä —ë–∑–∏—à “≥—É“õ—É“õ–∏–≥–∞ —ç–≥–∞ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä —Å–æ–Ω–∏
    cursor.execute("""
        SELECT COUNT(*)  -- –•–∞–±–∞—Ä —ë–∑–∏—à “≥—É“õ—É“õ–∏–≥–∞ —ç–≥–∞ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä
        FROM users  -- –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä –∂–∞–¥–≤–∞–ª–∏
        WHERE chat_id=?  -- –ì—É—Ä—É“≥ ID—Å–∏
            AND write_access = 1  -- –•–∞–±–∞—Ä —ë–∑–∏—à “≥—É“õ—É“õ–∏–≥–∞ —ç–≥–∞
    """, (chat_id,))
    can_write_users = cursor.fetchone()[0]

    conn.close()

    stats_text = (f"üìä <b>–ì—É—Ä—É“≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏:</b>\n\n"
                  f"üë• –ñ–∞–º–∏ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä: <b>{total_users}</b>\n"
                  f"üìà –é—Ä—Ç–∞—á–∞ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä: <b>{avg_refer:.1f}</b>\n"
                  f"‚úçÔ∏è –•–∞–±–∞—Ä —ë–∑–∏—à “≥—É“õ—É“õ–∏–≥–∞ —ç–≥–∞: <b>{can_write_users}</b>\n\n"
                  f"{'üèÜ <b>–≠–Ω–≥ —Ñ–∞–æ–ª –∏—à—Ç–∏—Ä–æ–∫—á–∏–ª–∞—Ä:</b>\n' + top_users_text if top_users_text else ''}") 

    statistik = await update.message.reply_text(stats_text, parse_mode="HTML")

    await asyncio.sleep(5)
    try:
        await commd.delete()
        await statistik.delete()
    except Exception:
        pass

async def remove_left_members(chat_id: int, context: ContextTypes.DEFAULT_TYPE):
    """–ì—É—Ä—É“≥–¥–∞–Ω —á–∏“õ–∏–± –∫–µ—Ç–≥–∞–Ω–ª–∞—Ä–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à –≤–∞ —É–ª–∞—Ä–Ω–∏ referral —Ä—û–π—Ö–∞—Ç–∏–¥–∞–Ω —á–∏“õ–∞—Ä–∏—à."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # –ë–ê–ó–ê–î–ê–ù “≤–ê–ú–ú–ê –†–ï–§–ï–†–ê–õ–õ–ê–†–ù–ò –û–õ–ê–ú–ê–ù
            cursor.execute("SELECT user_id FROM users")
            all_users = cursor.fetchall()

            for user in all_users:
                user_id = user[0]

                try:
                    member = await context.bot.get_chat_member(chat_id, user_id)  # ‚úÖ TUZATILDI
                    if member.status in ["left", "kicked"]:  
                        # Agar foydalanuvchi chiqib ketgan bo‚Äòlsa
                        cursor.execute("UPDATE users SET refer_count = refer_count - 1 WHERE user_id=?", (user_id,))
                        conn.commit()
                        print(f"‚ùå {user_id} chiqib ketgan! refer_count kamaytirildi!")
                except Exception:
                    pass  # Agar xato bo‚Äòlsa, bot ishdan chiqmasin

    except sqlite3.Error as e:
        print(f"‚ùå remove_left_members({chat_id}): Xatolik yuz berdi: {e}")

async def get_real_refer_count(chat_id: int, user_id: int, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω–ª–∞—Ä–¥–∞–Ω —Ñ–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ “≥–∏—Å–æ–±–ª–∞–π–¥–∏."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # ‚úÖ Foydalanuvchi taklif qilgan barcha user_id larni olish
            cursor.execute("SELECT user_id FROM users WHERE invited_by=?", (user_id,))
            invited_users = cursor.fetchall()

            if not invited_users:
                return 0  # Taklif qilingan foydalanuvchilar yo‚Äòq

            real_count = 0

            # ‚úÖ Har bir taklif qilingan foydalanuvchini tekshirish
            for (invited_id,) in invited_users:
                try:
                    member = await context.bot.get_chat_member(chat_id, invited_id)
                    if member.status in ["member", "administrator"]:  # ‚úÖ Faqat guruhda qolganlarni hisoblash
                        real_count += 1
                except Exception:
                    pass  # Agar foydalanuvchini topa olmasa, davom etamiz

            return real_count

    except sqlite3.Error as e:
        print(f"‚ùå get_real_refer_count({chat_id}, {user_id}): X–∞—Ç–æ–ª–∏–∫: {e}")
        return 0

# ‚úÖ –ú–µ–Ω–∏–Ω–≥ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä–∏–º–Ω–∏ –∫—û—Ä–∏—à
async def my_referrals(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user  # ‚úÖ `.from_user` o‚Äòrniga universal ishlaydi
    chat = update.effective_chat  # ‚úÖ Chat ID olish uchun
    message = update.message or update.callback_query.message  # ‚úÖ Xatolikni oldini olish

    user_id = user.id
    chat_id = chat.id
    first_name = user.first_name

    conn = get_db_connection()
    cursor = conn.cursor()

    # ‚úÖ –§–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω —Ç–∞–∫–ª–∏—Ñ —ç—Ç–∏–ª–≥–∞–Ω–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
    cursor.execute("""
        SELECT COUNT(*) 
        FROM users 
        WHERE invited_by=? AND chat_id=? AND is_active=1
    """, (user_id, chat_id))
    refer_count = cursor.fetchone()[0] or 0  # None –±—û–ª—Å–∞ 0

    # ‚úÖ –Å–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä–Ω–∏ “≥–∏—Å–æ–±–ª–∞—à
    cursor.execute("""
        SELECT COUNT(*) 
        FROM users 
        WHERE invited_by=? AND chat_id=? AND is_active=1 AND write_access=1
    """, (user_id, chat_id))
    write_access = cursor.fetchone()[0] or 0  # None –±—û–ª—Å–∞ 0

    conn.close()

    if write_access == 0:
        access_message = "‚ùå –°–∏–∑–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–º–∞–≥–∞–Ω!"
    else:
        access_message = "‚úÖ –°–∏–∑–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–≥–∞–Ω!"

    mssg = await update.message.reply_text(f"üë§ {first_name}, –°–∏–∑ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω–ª–∞—Ä —Å–æ–Ω–∏: <b>{refer_count} —Ç–∞!</b> üìä\n{access_message}", parse_mode="HTML")

#    mssg = await update.message.reply_text(
#        f"üë§ {first_name}, –°–∏–∑ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω–ª–∞—Ä —Å–æ–Ω–∏: <b>{refer_count} —Ç–∞!</b> üìä\n"
#        f"{'‚ùå –°–∏–∑–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–º–∞–≥–∞–Ω!\n' if write_access == 0 else '‚úÖ –°–∏–∑–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–≥–∞–Ω!\n'}", 
#        parse_mode="HTML"
#    )
    try:
        await message.delete()
    except Exception:
        pass

    await asyncio.sleep(5)
    try:
        await mssg.delete()
    except Exception:
        pass

    return

# ‚úÖ –ë–æ—Ç–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∏—à
app = Application.builder().token(TOKEN).build() # –ë–æ—Ç–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∞–º–∏–∑
job_queue = app.job_queue  # JobQueue'–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∞–º–∏–∑

# üõ† –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏–Ω–∏ —û—á–∏—Ä–∏—à —Ñ—É–Ω–∫—Ü–∏—è—Å–∏
# –õ–∏–º–∏—Ç–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à —Ç—É–≥–º–∞—Å–∏–Ω–∏ —û—á–∏—Ä–∏—à
async def delete_set_limit(context: ContextTypes.DEFAULT_TYPE):  # JobQueue'–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏—à
    job_data = context.job.data  # JobQueue'–¥–∞–Ω –º–∞—ä–ª—É–º–æ—Ç –æ–ª–∞–º–∏–∑
    chat_id = job_data["chat_id"]  # –ì—É—Ä—É“≥ ID'—Å–∏
    message_id = job_data.get("message_id")  # –•–∞–±–∞—Ä ID'—Å–∏

    if not message_id:  # –ê–≥–∞—Ä `message_id` –π—û“õ –±—û–ª—Å–∞,
        return  # —Ñ—É–Ω–∫—Ü–∏—è–Ω–∏ —Ç—É–≥–∞—Ç–∞–º–∏–∑
    
    try: # –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        await context.bot.delete_message(chat_id, message_id) # –ì—É—Ä—É“≥ ID'—Å–∏ –≤–∞ —Ö–∞–±–∞—Ä ID'—Å–∏ –æ—Ä“õ–∞–ª–∏ —û—á–∏—Ä–∏—à
    except Exception as e: # –ê–≥–∞—Ä —Ö–∞—Ç–æ–ª–∏–∫ –±—û–ª—Å–∞,
        print(f"‚ùå –õ–∏–º–∏—Ç–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à —Ç—É–≥–º–∞—Å–∏–Ω–∏ —û—á–∏—Ä–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")

MIN_REFER = 5  # –°—Ç–∞–Ω–¥–∞—Ä—Ç –º–∏–Ω–∏–º–∞–ª —Ä–µ—Ñ–µ—Ä–∞–ª –ª–∏–º–∏—Ç–∏

# –õ–∏–º–∏—Ç–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à —Ç—É–≥–º–∞—Å–∏–Ω–∏ —é–±–æ—Ä–∏—à
async def set_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_id = update.message.from_user.id
    commd = update.message  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±—É–π—Ä—É“ì–∏–Ω–∏ –æ–ª–∏—à

    print(f"üë§ {user_id} –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª –æ—á–∏—à–≥–∞ —É—Ä–∏–Ω–∞—è–ø—Ç–∏...")  # DEBUG

    chat_member = await context.bot.get_chat_member(chat_id, user_id) # if user_id not in admin_ids:

    if chat_member.status not in ["administrator", "creator"]:
        msg = await update.message.reply_text("‚ùå –°–∏–∑ –∞–¥–º–∏–Ω —ç–º–∞—Å—Å–∏–∑!")
        await asyncio.sleep(5)  # 5 —Å–æ–Ω–∏—è –∫—É—Ç–∏—à
        try:
            await commd.delete()  # –ë—É–π—Ä—É“õ–Ω–∏ —û—á–∏—Ä–∏—à
            await msg.delete()  # –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        except Exception:
            pass  # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –π—û“õ –±—û–ª—Å–∞, –±–æ—Ç –∏—à–¥–∞–Ω —á–∏“õ–º–∞—Å–∏–Ω
        return  # –ê–≥–∞—Ä –∞–¥–º–∏–Ω –±—û–ª–º–∞—Å–∞, —á–∏“õ–∏–± –∫–µ—Ç–∞–º–∏–∑

     # –õ–∏–º–∏—Ç–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à —Ç—É–≥–º–∞—Å–∏
    print("‚úÖ –õ–∏–º–∏—Ç –ø–∞–Ω–µ–ª —é–±–æ—Ä–∏–ª–º–æ“õ–¥–∞...")  # DEBUG
    keyboard = [
        [InlineKeyboardButton("üîÑ –õ–∏–º–∏—Ç–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à", callback_data="change_limit")],
        [InlineKeyboardButton("üö´ –ü–∞–Ω–µ–ª–Ω–∏ —ë–ø–∏—à", callback_data="close_panel")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    admin_msg = await update.message.reply_text("‚öôÔ∏è –õ–∏–º–∏—Ç –ø–∞–Ω–µ–ª:", reply_markup=reply_markup)

    # 15 —Å–æ–Ω–∏—è–¥–∞–Ω –∫–µ–π–∏–Ω —Ö–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à —É—á—É–Ω JobQueue'–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏—à
    context.job_queue.run_once(delete_set_limit, 15, data={"chat_id": chat_id, "message_id": admin_msg.message_id})

CUSTOM_LIMIT = range(1)  # üîπ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏—à–∏–Ω–∏ –∫—É—Ç–∏—à “≥–æ–ª–∞—Ç–∏

def generate_limit_keyboard(current_limit):
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(f"üìå –ñ–æ—Ä–∏–π –ª–∏–º–∏—Ç: {current_limit} –æ–¥–∞–º", callback_data="none")],
        [InlineKeyboardButton("‚ûñ –û–∑–∞–π—Ç–∏—Ä–∏—à", callback_data="decrease_limit"),
         InlineKeyboardButton("‚ûï –ö—û–ø–∞–π—Ç–∏—Ä–∏—à", callback_data="increase_limit")],
        [InlineKeyboardButton("‚úÖ –¢–∞—Å–¥–∏“õ–ª–∞—à", callback_data="confirm_limit")],
        [InlineKeyboardButton("‚ùå –ë–µ–∫–æ—Ä “õ–∏–ª–∏—à", callback_data="cancel_limit")]
    ])

# ‚úÖ –õ–∏–º–∏—Ç–Ω–∏ –æ–∑–∞–π—Ç–∏—Ä–∏—à –≤–∞ –∫—û–ø–∞–π—Ç–∏—Ä–∏—à
async def adjust_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    chat_id = update.effective_chat.id  # üîπ –ß–∞—Ç ID
    data = query.data  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±–æ—Å–≥–∞–Ω —Ç—É–≥–º–∞ –º–∞—ä–ª—É–º–æ—Ç–∏–Ω–∏ –æ–ª–∞–º–∏–∑

    # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ –∂–æ—Ä–∏–π –ª–∏–º–∏—Ç–∏–Ω–∏ context.user_data'–¥–∞ —Å–∞“õ–ª–∞—à
    if "temp_limit" not in context.user_data: # –ê–≥–∞—Ä "temp_limit" –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, –±–∞–∑–∞–¥–∞–Ω –æ–ª–∞–º–∏–∑
        context.user_data["temp_limit"] = get_refer_limit(chat_id)  # üìå –ë–∞–∑–∞–¥–∞–Ω –∂–æ—Ä–∏–π –ª–∏–º–∏—Ç–Ω–∏ –æ–ª–∏—à

    current_limit = context.user_data["temp_limit"] # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ –∂–æ—Ä–∏–π –ª–∏–º–∏—Ç–∏

    if data == "increase_limit":
        context.user_data["temp_limit"] = current_limit + 1
    elif data == "decrease_limit":
        context.user_data["temp_limit"] = max(1, current_limit - 1)  # üîπ –õ–∏–º–∏—Ç 1 –¥–∞–Ω –∫–∞–º–∞–π–º–∞—Å–ª–∏–≥–∏ –∫–µ—Ä–∞–∫
    elif data == "confirm_limit":
        set_refer_limit(chat_id, context.user_data["temp_limit"])  # ‚úÖ –ë–∞–∑–∞–≥–∞ —Å–∞“õ–ª–∞–π–º–∏–∑
        await query.message.edit_text(f"‚úÖ –Ø–Ω–≥–∏ –ª–∏–º–∏—Ç –±–µ–ª–≥–∏–ª–∞–Ω–¥–∏: {context.user_data['temp_limit']} –æ–¥–∞–º")
        del context.user_data["temp_limit"]  # ‚úÖ –ö–µ—á–∏–∫—Ç–∏—Ä–∏–ª–≥–∞–Ω –º–∞—ä–ª—É–º–æ—Ç–Ω–∏ —û—á–∏—Ä–∏—à
        return  # ‚úÖ –§—É–Ω–∫—Ü–∏—è–Ω–∏ —Ç—É–≥–∞—Ç–∞–º–∏–∑
    elif data == "cancel_limit": # ‚ùå –ë–µ–∫–æ—Ä “õ–∏–ª–∏—à –±–æ—Å–∏–ª–≥–∞–Ω–¥–∞
        await query.message.edit_text(f"–õ–∏–º–∏—Ç —û–∑–≥–∞—Ä—Ç–∏—Ä–∏–ª–º–∞–¥–∏. –ñ–æ—Ä–∏–π —á–µ–∫–ª–æ–≤: {current_limit} –æ–¥–∞–º")
        return # ‚ùå –§—É–Ω–∫—Ü–∏—è–Ω–∏ —Ç—É–≥–∞—Ç–∞–º–∏–∑

    new_limit = context.user_data["temp_limit"]
    reply_markup = generate_limit_keyboard(new_limit)

    await query.answer(f"–¢–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏ {new_limit} –≥–∞ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏–ª–¥–∏!")  # ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏—à
    await query.message.edit_reply_markup(reply_markup=reply_markup) # ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞–Ω–∏ —è–Ω–≥–∏–ª–∞—à

# ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —é–±–æ—Ä–≥–∞–Ω —Ä–∞“õ–∞–º–Ω–∏ “õ–∞–±—É–ª “õ–∏–ª–∏—à
async def set_custom_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        limit = int(update.message.text)  # üîπ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ —Ä–∞“õ–∞–º —é–±–æ—Ä–≥–∞–Ω–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
        if limit <= 0:
            await update.message.reply_text("‚ùå –õ–∏–º–∏—Ç –º—É—Å–±–∞—Ç —Å–æ–Ω –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫! “ö–∞–π—Ç–∞ —É—Ä–∏–Ω–∏–± –∫—û—Ä–∏–Ω–≥:")
            return CUSTOM_LIMIT  # üîπ –Ø–Ω–∞ —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏—à–Ω–∏ –∫—É—Ç–∏—à

        set_refer_limit(limit)  # ‚úÖ –õ–∏–º–∏—Ç–Ω–∏ —Å–∞“õ–ª–∞—à
        await update.message.reply_text(f"‚úÖ –ì—É—Ä—É“≥ —É—á—É–Ω –º–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏ {limit} “õ–∏–ª–∏–± —û—Ä–Ω–∞—Ç–∏–ª–¥–∏!")
        return ConversationHandler.END  # üîπ –ú—É–ª–æ“õ–æ—Ç–Ω–∏ —è–∫—É–Ω–ª–∞—à

    except ValueError:
        await update.message.reply_text("‚ùå –ù–æ—Ç—û“ì—Ä–∏ —Ñ–æ—Ä–º–∞—Ç! –ò–ª—Ç–∏–º–æ—Å, —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏–Ω–≥:")
        return CUSTOM_LIMIT  # üîπ –Ø–Ω–∞ —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏—à–Ω–∏ –∫—É—Ç–∏—à

# ‚úÖ –ú—É–ª–æ“õ–æ—Ç–Ω–∏ –±–µ–∫–æ—Ä “õ–∏–ª–∏—à (–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–º–∞—Å–∞)
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üö´ –õ–∏–º–∏—Ç–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à –±–µ–∫–æ—Ä “õ–∏–ª–∏–Ω–¥–∏.")
    return ConversationHandler.END

async def ask_write_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.message.edit_text("üî¢ –ò–ª—Ç–∏–º–æ—Å, —è–Ω–≥–∏ –º–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏–Ω–∏ —Ä–∞“õ–∞–º —Å–∏—Ñ–∞—Ç–∏–¥–∞ —é–±–æ—Ä–∏–Ω–≥:")
    return CUSTOM_LIMIT  # ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ –∂–∞–≤–æ–±–∏–Ω–∏ –∫—É—Ç–∏—à

# ‚úÖ –ë–æ—à“õ–∞—Ä—É–≤ —Ç—É–≥–º–∞—á–∞–ª–∞—Ä–∏–Ω–∏ —Å–æ–∑–ª–∞—à
conv_handler = ConversationHandler( 
    entry_points=[CallbackQueryHandler(ask_write_limit, pattern="^write_limit$")],
    states={
        CUSTOM_LIMIT: [MessageHandler(filters.TEXT & ~filters.COMMAND, set_custom_limit)],
    },
    fallbacks=[CommandHandler("cancel", cancel)]
)

# –≥—É—Ä—É“≥–¥–∞–≥–∏ “≥–∞“õ–∏“õ–∏–π –∞–¥–º–∏–Ω–ª–∞—Ä–Ω–∏ –∞–Ω–∏“õ–ª–∞–π–¥–∏
async def is_admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –≥—É—Ä—É“≥ –∞–¥–º–∏–Ω–∏ —ç–∫–∞–Ω–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à."""
    chat_id = update.message.chat_id
    user_id = update.message.from_user.id
    admins = await context.bot.get_chat_administrators(chat_id)

    return any(admin.user.id == user_id for admin in admins)

# –¢–∞–Ω–ª–∞–Ω–≥–∞–Ω —á–µ–∫–ª–æ–≤–Ω–∏ —Å–∞“õ–ª–∞—à
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    chat_id = update.effective_chat.id  # üìå –ì—É—Ä—É“≥ ID'—Å–∏–Ω–∏ –æ–ª–∞–º–∏–∑
    data = query.data
    print(f"üîπ Callback –∫–µ–ª–¥–∏: {data} | Chat ID: {chat_id}")  # DEBUG —É—á—É–Ω

    if not query.message:
        await query.answer("‚ö† –•–∞—Ç–æ–ª–∏–∫: “≤–∞–±–∞—Ä —Ç–æ–ø–∏–ª–º–∞–¥–∏!", show_alert=True)
        return  # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, —Ñ—É–Ω–∫—Ü–∏—è–Ω–∏ —Ç—û—Ö—Ç–∞—Ç–∞–º–∏–∑
    
    # –õ–∏–º–∏—Ç–Ω–∏ —Ç–∞–Ω–ª–∞—à —Ç—É–≥–º–∞–ª–∞—Ä–∏–Ω–∏ —á–∏“õ–∞—Ä–∏—à
    if data == "change_limit":

        # –†–∞“õ–∞–º–ª–∏ —Ç–∞–Ω–ª–æ–≤ —Ç—É–≥–º–∞–ª–∞—Ä–∏ –≤–∞ "–ë–æ—à“õ–∞ —Ä–∞“õ–∞–º —Ç–∞–Ω–ª–∞—à"
        keyboard = [
            [InlineKeyboardButton("5", callback_data="limit_5"),
            InlineKeyboardButton("10", callback_data="limit_10")],
            [InlineKeyboardButton("15", callback_data="limit_15"),
            InlineKeyboardButton("20", callback_data="limit_20")],
            [InlineKeyboardButton("üî¢ –ë–æ—à“õ–∞ —Ä–∞“õ–∞–º —Ç–∞–Ω–ª–∞—à", callback_data="custom_limit")],
            [InlineKeyboardButton("“ö—û–ª–¥–∞ —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏—à", callback_data="write_limit")],
            [InlineKeyboardButton("üö´ –ü–∞–Ω–µ–ª–Ω–∏ —ë–ø–∏—à", callback_data="close_panel")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        try:
            await query.message.edit_text("–ì—É—Ä—É“≥ —É—á—É–Ω –º–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥:", reply_markup=reply_markup)
        except Exception as e:
            print(f"‚ùå –•–∞–±–∞—Ä–Ω–∏ —Ç–∞“≥—Ä–∏—Ä “õ–∏–ª–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")
            await query.answer("‚ö† –•–∞–±–∞—Ä —Ç–∞“≥—Ä–∏—Ä “õ–∏–ª–∏–± –±—û–ª–º–∞–π–¥–∏!", show_alert=True)

    # ‚úÖ "write_limit" —Ç–∞–Ω–ª–∞–Ω–≥–∞–Ω–¥–∞ ask_write_limit'–Ω–∏ –∏—à–≥–∞ —Ç—É—à—É—Ä–∞–º–∏–∑
    if data == "write_limit":
        await ask_write_limit(update, context)  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–¥–∞–Ω —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏—à–Ω–∏ —Å—û—Ä–∞–π–º–∏–∑
        return  # –§—É–Ω–∫—Ü–∏—è–Ω–∏ —Ç—É–≥–∞—Ç–∞–º–∏–∑

    # –ü–∞–Ω–µ–ª–Ω–∏ —û—á–∏—Ä–∏—à
    if data == "close_panel":
        try:
            await query.message.delete()
            await query.answer("–ü–∞–Ω–µ–ª —ë–ø–∏–ª–¥–∏! ‚úÖ", show_alert=False)
        except Exception as e:
            print(f"‚ùå –ü–∞–Ω–µ–ª–Ω–∏ —ë–ø–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")
        return
    
    # ‚úÖ 5, 10, 15, 20 —Ç–∞–Ω–ª–æ–≤–ª–∞—Ä–∏ –∏—à–ª–∞–º–∞—Å–∞, —É—à–±—É “õ–∏—Å–º–∏ —Ç–µ–∫—à–∏—Ä–∏–ª–∞–¥–∏
    if data.startswith("limit_"):
        try:
            #limit = int(data.split("_")[1])
            _, limit_value = data.split("_")
            limit = int(limit_value)
            print(f"‚úÖ –¢–∞–Ω–ª–∞–Ω–≥–∞–Ω –ª–∏–º–∏—Ç: {limit}")  # DEBUG
            context.user_data["temp_limit"] = limit  # üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ç–∞–Ω–ª–∞–≥–∞–Ω –ª–∏–º–∏—Ç–Ω–∏ —Å–∞“õ–ª–∞–π–º–∏–∑
            set_refer_limit(chat_id, limit)  # üìå –ì—É—Ä—É“≥ ID –±—û–π–∏—á–∞ —á–µ–∫–ª–æ–≤–Ω–∏ —Å–∞“õ–ª–∞–π–º–∏–∑
            await query.answer(f"–¢–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏ {limit} “õ–∏–ª–∏–± —û—Ä–Ω–∞—Ç–∏–ª–¥–∏!")
            await query.message.edit_text(f"–ì—É—Ä—É“≥ —É—á—É–Ω –º–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏: {limit} –æ–¥–∞–º")
        except Exception as e:
            print(f"‚ùå –õ–∏–º–∏—Ç–Ω–∏ —Å–∞“õ–ª–∞—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")
        return

    # "–ë–æ—à“õ–∞ —Ä–∞“õ–∞–º —Ç–∞–Ω–ª–∞—à" –ª–æ–≥–∏–∫–∞—Å–∏
    if data == "custom_limit":
        limit = get_refer_limit(chat_id)  # üìå –ì—É—Ä—É“≥ ID –±—û–π–∏—á–∞ —á–µ–∫–ª–æ–≤–Ω–∏ –æ–ª–∞–º–∏–∑

        if "temp_limit" not in context.user_data:  # –ê–≥–∞—Ä –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, –±–∞–∑–∞–¥–∞–Ω –æ–ª–∞–º–∏–∑
            context.user_data["temp_limit"] = get_refer_limit(chat_id)  

        keyboard = [
            [InlineKeyboardButton(f"üìå –ñ–æ—Ä–∏–π –ª–∏–º–∏—Ç: {context.user_data['temp_limit']} –æ–¥–∞–º", callback_data="none")],
            [InlineKeyboardButton("‚ûñ –û–∑–∞–π—Ç–∏—Ä–∏—à", callback_data="decrease_limit"),
             InlineKeyboardButton("‚ûï –ö—û–ø–∞–π—Ç–∏—Ä–∏—à", callback_data="increase_limit")],
            [InlineKeyboardButton("‚úÖ –¢–∞—Å–¥–∏“õ–ª–∞—à", callback_data="confirm_limit")],
            [InlineKeyboardButton("‚ùå –ë–µ–∫–æ—Ä “õ–∏–ª–∏—à", callback_data="cancel_limit")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # **üìå –§–∞“õ–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–Ω–∏ —è–Ω–≥–∏–ª–∞–π–º–∏–∑, –º–∞—Ç–Ω —û–∑–≥–∞—Ä–º–∞–π–¥–∏!**
        await query.message.edit_reply_markup(reply_markup=reply_markup)

# –õ–∏–º–∏—Ç–Ω–∏ –±–∞–∑–∞–¥–∞ —Å–∞“õ–ª–∞—à
def set_refer_limit(chat_id: int, limit: int):
    """Settings –∂–∞–¥–≤–∞–ª–∏–¥–∞ `min_refer` “õ–∏–π–º–∞—Ç–∏–Ω–∏ —è–Ω–≥–∏–ª–∞–π–¥–∏. –ê–≥–∞—Ä –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, “õ—û—à–∞–¥–∏."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # `settings` –∂–∞–¥–≤–∞–ª–∏–¥–∞ chat_id –º–∞–≤–∂—É–¥–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
            cursor.execute("SELECT COUNT(*) FROM settings WHERE chat_id=?", (chat_id,))
            exists = cursor.fetchone()[0] > 0  

            if exists:
                cursor.execute("UPDATE settings SET min_refer=? WHERE chat_id=?", (limit, chat_id))
            else:
                cursor.execute("INSERT INTO settings (chat_id, min_refer) VALUES (?, ?)", (chat_id, limit))  

            conn.commit()
            print(f"‚úÖ {chat_id} —É—á—É–Ω —á–µ–∫–ª–æ–≤ {limit} –≥–∞ —û—Ä–Ω–∞—Ç–∏–ª–¥–∏!")  

    except sqlite3.Error as e:
        print(f"‚ùå set_refer_limit(): Xatolik yuz berdi: {e}") 

# –ë–∞–∑–∞–¥–∞–Ω –º–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ —á–µ–∫–ª–æ–≤–∏–Ω–∏ –æ–ª–∏—à
def get_refer_limit(chat_id: int) -> int:
    """Settings –∂–∞–¥–≤–∞–ª–∏–¥–∞–Ω `min_refer` “õ–∏–π–º–∞—Ç–∏–Ω–∏ –æ–ª–∞–¥–∏. –ê–≥–∞—Ä –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, `MIN_REFER` “õ–∞–π—Ç–∞—Ä–∞–¥–∏."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT min_refer FROM settings WHERE chat_id=?", (chat_id,))  
            result = cursor.fetchone()
            
            return int(result[0]) if result and result[0] is not None else MIN_REFER  

    except sqlite3.Error as e:
        print(f"‚ùå get_refer_limit({chat_id}): X–∞—Ç–æ–ª–∏–∫ —é–∑ –±–µ—Ä–¥–∏: {e}")  
        return MIN_REFER

# –ë–∞–∑–∞–≥–∞ –æ–¥–∞–º–Ω–∏ “õ—û—à–∏—à —ë–∫–∏ —è–Ω–≥–∏–ª–∞—à
def add_referral(user_id, chat_id, invited_by):
    """–Ø–Ω–≥–∏ —Ç–∞–∫–ª–∏—Ñ–Ω–∏ –±–∞–∑–∞–≥–∞ “õ—û—à–∏—à."""
    print(f"üîç add_referral() ishladi: user_id={user_id}, chat_id={chat_id}, invited_by={invited_by}")  # ‚úÖ LOG

    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()

            # ‚ö° –ì—É—Ä—É“≥–Ω–∏ –±–∞–∑–∞–≥–∞ “õ—û—à–∞–º–∏–∑, –∞–≥–∞—Ä —É –π—û“õ –±—û–ª—Å–∞
            add_group_to_db(chat_id)

            

           # üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±–∞–∑–∞–¥–∞ –±–æ—Ä —ë–∫–∏ –π—û“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
            cursor.execute("""
                    SELECT user_id 
                    FROM users 
                    WHERE user_id=? 
                        AND chat_id=?
                """,  (user_id, chat_id))
            exists = cursor.fetchone()

            if not exists: # üìå –ê–≥–∞—Ä —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±–∞–∑–∞–¥–∞ –π—û“õ –±—û–ª—Å–∞, “õ—û—à–∞–º–∏–∑
                cursor.execute("""
                    INSERT INTO users (user_id, chat_id, refer_count, write_access, invited_by) 
                    VALUES (?, ?, ?, ?, ?)
                """, (user_id, chat_id, 0, 0, invited_by))
                conn.commit()  # –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä —Ç—û“ì—Ä–∏ —Å–∞“õ–ª–∞–Ω–≥–∞–Ω–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏–Ω–≥

            # üìå –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–∏–Ω–≥–∞–Ω–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ —Ñ–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ “õ–æ–ª–≥–∞–Ω–ª–∞—Ä –æ—Ä“õ–∞–ª–∏ “≥–∏—Å–æ–±–ª–∞—à
            cursor.execute("""
                SELECT COUNT(*) 
                FROM users 
                WHERE invited_by=? 
                    AND chat_id=?
                    AND write_access=1
            """, (invited_by, chat_id))
            refer_count = cursor.fetchone()[0]

            print(f"üîπ REFER COUNT: {refer_count}")  # –õ–æ–≥: Refer count

            required_refs = get_refer_limit(chat_id)  # ‚úÖ –ì—É—Ä—É“≥ ID –±—û–π–∏—á–∞ minimal referral –æ–ª–∏—à
            write_access = int(refer_count >= required_refs)  # ‚úÖ 1 —ë–∫–∏ 0

            # üìå –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏–Ω–∏ —è–Ω–≥–∏–ª–∞—à
            cursor.execute("""
                UPDATE users 
                SET refer_count=?, write_access=? 
                WHERE user_id=? 
                    AND chat_id=?
            """, (refer_count, write_access, invited_by, chat_id))
            conn.commit()  # –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä —Ç—û“ì—Ä–∏ —Å–∞“õ–ª–∞–Ω–≥–∞–Ω–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏–Ω–≥

            print(f"‚úÖ {invited_by} —É—á—É–Ω —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏: {refer_count} (–ª–∏–º–∏—Ç: {required_refs})")

    except sqlite3.Error as e:
        print(f"‚ùå add_referral({user_id}): X–∞—Ç–æ–ª–∏–∫ yuz berdi: {e}")  # ‚úÖ –•–∞—Ç–æ–ª–∞—Ä–Ω–∏ –ª–æ–≥–≥–∞ —á–∏“õ–∞—Ä–∞–º–∏–∑

# –ì—É—Ä—É“≥–≥–∞ —è–Ω–≥–∏ –æ–¥–∞–º “õ—û—à–∏–ª–≥–∞–Ω–¥–∞
async def new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    print("üîπ `new_member` –§–£–ù–ö–¶–ò–Ø–°–ò –ß–ê“ö–ò–†–ò–õ–î–ò!")  
    #print(f"üîπ new_member —á–∞“õ–∏—Ä–∏–ª–¥–∏: {update}") # –¢–ï–ì–ò–®–õ–ò –•–ê–ë–ê–†–õ–ê–†–ù–ò –õ–û–ì–ì–ê –ß–ò“ö–ê–†–ê–ú–ò–ó

    if update.message and update.message.new_chat_members:
        new_user = update.message.new_chat_members[0]  # ‚úÖ –Ø–Ω–≥–∏ “õ—û—à–∏–ª–≥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏
        new_user_id = new_user.id  # üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ ID
        chat_id = update.message.chat_id  # üìå –ì—É—Ä—É“≥ ID
        inviter_id = update.message.from_user.id  # ‚úÖ –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω —à–∞—Ö—Å–Ω–∏–Ω–≥ ID

        print(f"üë§ –Ø–Ω–≥–∏ –∞—ä–∑–æ ID: {new_user_id}, –¢–∞–∫–ª–∏—Ñ “õ–∏–ª–≥–∞–Ω ID: {inviter_id}, –ì—É—Ä—É“≥ ID: {chat_id}")

        # ‚úÖ add_referral() —Ñ—É–Ω–∫—Ü–∏—è—Å–∏–Ω–∏ —Ç—û“ì—Ä–∏ —á–∞“õ–∏—Ä–∏—à
        add_referral(user_id=new_user_id, invited_by=inviter_id, chat_id=chat_id)

        await delete_join_message(update, context)  # ‚úÖ –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à

# –ì—É—Ä—É“≥–≥–∞ “õ—û—à–∏–ª–∏—à –≤–∞ —á–∏“õ–∏—à —Ö–∞–±–∞—Ä–ª–∞—Ä–∏–Ω–∏ —û—á–∏—Ä–∏—à
async def delete_join_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("üîπ `delete_join_message` –§–£–ù–ö–¶–ò–Ø–°–ò –ß–ê“ö–ò–†–ò–õ–î–ò!")  # ‚úÖ DEBUG —É—á—É–Ω 
    await asyncio.sleep(1)  # 1 —Å–æ–Ω–∏—è –∫—É—Ç–∏—à, –û—à–∏–± –∫–µ—Ç–∏—à–≥–∞ “õ–∞—Ä—à–∏ –∫–µ—á–∏–∫–∏—à “õ—û—à–∞–º–∏–∑
    # print(f"üîπ delete_join_message —á–∞“õ–∏—Ä–∏–ª–¥–∏: {update}")

    if update.message: # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –º–∞–≤–∂—É–¥ –±—û–ª—Å–∞,
        print("üóë –•–∞–±–∞—Ä —û—á–∏—Ä–∏–ª–º–æ“õ–¥–∞...")  # ‚úÖ DEBUG —É—á—É–Ω  
        try:
            await update.message.delete()  # ‚úÖ –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
        except Exception as e:
            print(f"‚ùå –•–∞–±–∞—Ä —û—á–∏—Ä–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")  # ‚úÖ –ê–≥–∞—Ä —û—á–º–∞—ë—Ç–≥–∞–Ω –±—û–ª—Å–∞, —Å–∞–±–∞–±–∏–Ω–∏ –±–∏–ª–∏—à —É—á—É–Ω –ª–æ–≥–≥–∞ —á–∏“õ–∞—Ä–∞–º–∏–∑
#    await update.message.delete() # –ì—É—Ä—É“≥–≥–∞ “õ—û—à–∏–ª–≥–∞–Ω–¥–∞ —Ö–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
    else:
        print("‚ùå –•–∞–±–∞—Ä –º–∞–≤–∂—É–¥ —ç–º–∞—Å!")  # –ê–≥–∞—Ä —Ö–∞–±–∞—Ä –º–∞–≤–∂—É–¥ –±—û–ª–º–∞—Å–∞, –ª–æ–≥–≥–∞ —á–∏“õ–∞—Ä–∞–º–∏–∑

# –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ —ë–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
def check_write_access(user_id, chat_id):
    conn = get_db_connection()
    cursor = conn.cursor()

    # –ì—É—Ä—É“≥ —É—á—É–Ω –º–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏–Ω–∏ –æ–ª–∞–º–∏–∑
    cursor.execute("""
        SELECT min_refer 
        FROM settings 
        WHERE chat_id = ?
    """, (chat_id,))
    row = cursor.fetchone()

    if row is None:
        conn.close()
        return False  # –ê–≥–∞—Ä –≥—É—Ä—É“≥ –±–∞–∑–∞–¥–∞ –±—û–ª–º–∞—Å–∞, —ë–∑–∏—à–Ω–∏ —á–µ–∫–ª–∞–π–º–∏–∑
    
    min_refer = row[0]  # –ú–∏–Ω–∏–º–∞–ª —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏

    # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
    cursor.execute("""
        SELECT refer_count, write_access 
        FROM users 
        WHERE user_id = ?
    """, (user_id,))
    user_row = cursor.fetchone()
    
    conn.close()

    if user_row is None:
        return False  # –ê–≥–∞—Ä —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±–∞–∑–∞–¥–∞ –±—û–ª–º–∞—Å–∞, —ë–∑–∏—à–Ω–∏ —á–µ–∫–ª–∞–π–º–∏–∑

    refer_count = user_row[0]
    write_access = user_row[1]  # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ —ë–∑–∏—à “≥—É“õ—É“õ–∏

    # –ê–≥–∞—Ä —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä –µ—Ç–∞—Ä–ª–∏ –±—û–ª—Å–∞ –≤–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–º–∞–≥–∞–Ω –±—û–ª—Å–∞
    if refer_count >= min_refer and write_access == 0:
        update_write_access(user_id, chat_id, True)  # –Å–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ –±–µ—Ä–∏—à
        return True

    return write_access == 1  # –ê–≥–∞—Ä —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–≥–∞–Ω –±—û–ª—Å–∞, true “õ–∞–π—Ç–∞—Ä–∞–º–∏–∑

# ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à    
def get_refer_count(user_id: int, chat_id: int):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä–∏ —Å–æ–Ω–∏–Ω–∏ –æ–ª–∏—à."""
    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("""
                SELECT refer_count 
                FROM users 
                WHERE user_id=? 
                    AND chat_id=?
            """, (user_id, chat_id))
            refer_count = cursor.fetchone()
            if refer_count is None:
                print(f"‚ùå {user_id} —É—á—É–Ω —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏ –º–∞–≤–∂—É–¥ —ç–º–∞—Å.")
                return 0  # –ê–≥–∞—Ä –º–∞—ä–ª—É–º–æ—Ç –±—û–ª–º–∞—Å–∞, 0 “õ–∞–π—Ç–∞—Ä–∏—à
            return refer_count[0]

    except sqlite3.Error as e:
        print(f"‚ùå get_refer_count({user_id}): –•–∞—Ç–æ–ª–∏–∫ yuz berdi: {e}")
        return 0  # –•–∞—Ç–æ–ª–∏–∫ –±—û–ª—Å–∞ “≥–∞–º 0 “õ–∞–π—Ç–∞—Ä–∏—à

# ‚úÖ “≤–∞—Ä –±–∏—Ä —Ö–∞–±–∞—Ä –∫–µ–ª–≥–∞–Ω–¥–∞ –∞–Ω—Ç–∏-—Ñ–ª—É–¥–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # ‚úÖ –§–∞“õ–∞—Ç–≥–∏–Ω–∞ –æ–¥–¥–∏–π —Ö–∞–±–∞—Ä–ª–∞—Ä —É—á—É–Ω –∏—à–ª–∞–π–¥–∏
    if update.message is not None:
        await anti_flood(update, context)  # ‚úÖ –ê–Ω—Ç–∏-—Ñ–ª—É–¥ —Ç–∏–∑–∏–º–∏

    if update.message.from_user.id == context.bot.id: # –ë–æ—Ç–Ω–∏–Ω–≥ —û–∑ —Ö–∞–±–∞—Ä–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
        return  

    user_id = update.message.from_user.id  
    chat_id = update.effective_chat.id  
    user_name = update.message.from_user.first_name  

    chat_member = await context.bot.get_chat_member(chat_id, user_id)

    # ‚ö° –ì—É—Ä—É“≥–Ω–∏ –±–∞–∑–∞–≥–∞ “õ—û—à–∞–º–∏–∑, –∞–≥–∞—Ä —É –π—û“õ –±—û–ª—Å–∞
    add_group_to_db(chat_id)
    print(f"‚ùå def handle_message: {user_id} | Chat ID: {chat_id}")  # DEBUG

    if chat_member.status in ["administrator", "creator"]:
        return # –ê–≥–∞—Ä –∞–¥–º–∏–Ω –±—û–ª—Å–∞, —Ñ—É–Ω–∫—Ü–∏—è–Ω–∏ —Ç—É–≥–∞—Ç–∞–º–∏–∑

    if user_id == CREATOR_ID:
        return  # –•—É—Å—É—Å–∞–Ω, –±–æ—Ç–Ω–∏ –∏—à–ª–∞—Ç—É–≤—á–∏ –∏–∂–æ–¥–∫–æ—Ä–Ω–∏ —Ç–µ–∫—à–∏—Ä–º–∞—Å–ª–∏–∫

    # –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏
    refer_count = get_refer_count(user_id, chat_id)

    # –ì—É—Ä—É“≥ —É—á—É–Ω –º–∏–Ω–∏–º–∞–ª —á–µ–∫–ª–æ–≤
    required_refs = get_refer_limit(chat_id)

    # ‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —ë–∑–∏—à “≥—É“õ—É“õ–∏–≥–∞ —ç–≥–∞–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∞–º–∏–∑
    if refer_count < required_refs:
        remaining = required_refs - refer_count  

        mention = f'<a href="tg://user?id={user_id}">{user_name}</a>'  

        try:
            await update.message.delete()  
            warning_msg = await context.bot.send_message(
                chat_id=chat_id,
                text=f"“≤—É—Ä–º–∞—Ç–ª–∏ {mention},\n"
                    f"–ì—É—Ä—É“≥–¥–∞ —Ö–∞–±–∞—Ä —ë–∑–∏—à —É—á—É–Ω \n"
                    f"—Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä —Å–æ–Ω–∏ {refer_count}, –ª–∏–º–∏—Ç {required_refs}!\n"
                    f"—è–Ω–∞ {remaining} —Ç–∞ –æ–¥–∞–º “õ—û—à–∏–Ω–≥.",  
                parse_mode=ParseMode.HTML  
            )
            await asyncio.sleep(5) 
            await warning_msg.delete()  
            return
        except Exception as e:
            print(f"‚ùå –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")

# ‚úÖ –Å–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ “õ—û–ª–¥–∞ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à —É—á—É–Ω –±—É–π—Ä—É“õ “õ—û—à–∏—à
async def update_write_access(user_id: int, chat_id: int, access: bool):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —ë–∑–∏—à —Ä—É—Ö—Å–∞—Ç–∏–Ω–∏ –±–µ—Ä–∏—à —ë–∫–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞—à."""
    try:
        async with get_db_connection() as conn:
            cursor = conn.cursor()

            # üõ† –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±–∞–∑–∞–¥–∞ –±–æ—Ä-–π—û“õ–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
            await cursor.execute("SELECT 1 FROM users WHERE user_id=? AND chat_id=?", (user_id, chat_id))
            #cursor.execute("""
            #        UPDATE users 
            #        SET write_access = ? 
            #        WHERE user_id = ? 
            #            AND chat_id = ?
            #    """, (int(access), user_id, chat_id))
            exists = cursor.fetchone()

            if exists:  # ‚úÖ –ê–≥–∞—Ä —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –±–∞–∑–∞–¥–∞ –±—û–ª—Å–∞, `write_access` —è–Ω–≥–∏–ª–∞–Ω–∞–¥–∏
                await cursor.execute("""
                        UPDATE users 
                        SET write_access=? 
                        WHERE user_id=? 
                            AND chat_id=?
                    """, (int(access), user_id, chat_id))
            else:  # ‚úÖ –ê–≥–∞—Ä –π—û“õ –±—û–ª—Å–∞, —è–Ω–≥–∏ —ë–∑—É–≤ “õ—û—à–∏–ª–∞–¥–∏
                await cursor.execute("""
                        INSERT INTO users (user_id, chat_id, write_access) 
                        VALUES (?, ?, ?)
                    """, (user_id, chat_id, int(access)))

            await conn.commit()  # ‚úÖ –ë–∞–∑–∞–Ω–∏ —Å–∞“õ–ª–∞—à
    except sqlite3.Error as e:
        print(f"‚ùå update_write_access(): X–∞—Ç–æ–ª–∏–∫ —é–∑ –±–µ—Ä–¥–∏: {e}")  # ‚úÖ –•–∞—Ç–æ–ª–∞—Ä–Ω–∏ —á–æ–ø —ç—Ç–∏—à

# üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ –±–µ—Ä–∏—à
async def grant_write(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """üìå –ê–¥–º–∏–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∞–¥–∏."""
    chat_id = update.effective_chat.id
    user_id = None

    # üîπ –ê–≥–∞—Ä —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ –∂–∞–≤–æ–± –±–µ—Ä–∏–ª–≥–∞–Ω –±—û–ª—Å–∞, —É–Ω–∏ ID'—Å–∏–Ω–∏ –æ–ª–∞–º–∏–∑
    if update.message.reply_to_message:
        user_id = update.message.reply_to_message.from_user.id
    # üîπ –ê–≥–∞—Ä –±—É–π—Ä—É“õ –±–∏–ª–∞–Ω ID –±–µ—Ä–∏–ª–≥–∞–Ω –±—û–ª—Å–∞, —É–Ω–∏ —Ç–µ–∫—à–∏—Ä–∞–º–∏–∑
    elif context.args:
        try:
            user_id = int(context.args[0])
        except ValueError:
            await update.message.reply_text("‚ùå –ù–æ—Ç—û“ì—Ä–∏ ID —Ñ–æ—Ä–º–∞—Ç–∏! –ò–ª—Ç–∏–º–æ—Å, —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏–Ω–≥.")
            return
    # üîπ –ê–≥–∞—Ä ID “≥–∞–º, –∂–∞–≤–æ–± “≥–∞–º –±–µ—Ä–∏–ª–º–∞–≥–∞–Ω –±—û–ª—Å–∞
    else:
        await update.message.reply_text("‚ùå –ò–ª—Ç–∏–º–æ—Å, —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –∂–∞–≤–æ–± –æ—Ä“õ–∞–ª–∏ —ë–∫–∏ ID –±–∏–ª–∞–Ω —é–±–æ—Ä–∏–Ω–≥!")
        return

    # üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ –±–µ—Ä–∏—à
    update_write_access(user_id, chat_id, True)

    # ‚úÖ –ñ–∞–≤–æ–± —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∏—à
    user_mention = f"<a href='tg://user?id={user_id}'>{html.escape(str(user_id))}</a>"
    await update.message.reply_text(
        f"‚úÖ {user_mention} –≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏ –±–µ—Ä–∏–ª–¥–∏!", 
        parse_mode="HTML"
    )

# üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ –±–µ–∫–æ—Ä “õ–∏–ª–∏—à
async def revoke_write(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ê–¥–º–∏–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–¥–∞–Ω —ë–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞–π–¥–∏"""
    chat_id = update.effective_chat.id
    user_id = None

    # üîπ –ê–≥–∞—Ä —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ –∂–∞–≤–æ–± –±–µ—Ä–∏–ª–≥–∞–Ω –±—û–ª—Å–∞, —É–Ω–∏ ID'—Å–∏–Ω–∏ –æ–ª–∞–º–∏–∑
    if update.message.reply_to_message:
        user_id = update.message.reply_to_message.from_user.id
    # üîπ –ê–≥–∞—Ä –±—É–π—Ä—É“õ –±–∏–ª–∞–Ω ID –±–µ—Ä–∏–ª–≥–∞–Ω –±—û–ª—Å–∞, —É–Ω–∏ —Ç–µ–∫—à–∏—Ä–∞–º–∏–∑
    elif context.args:
        try:
            user_id = int(context.args[0])
        except ValueError:
            await update.message.reply_text("‚ùå –ù–æ—Ç—û“ì—Ä–∏ ID —Ñ–æ—Ä–º–∞—Ç–∏! –ò–ª—Ç–∏–º–æ—Å, —Ä–∞“õ–∞–º –∫–∏—Ä–∏—Ç–∏–Ω–≥.")
            return
    # üîπ –ê–≥–∞—Ä ID “≥–∞–º, –∂–∞–≤–æ–± “≥–∞–º –±–µ—Ä–∏–ª–º–∞–≥–∞–Ω –±—û–ª—Å–∞
    else:
        await update.message.reply_text("‚ùå –ò–ª—Ç–∏–º–æ—Å, —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –∂–∞–≤–æ–± –æ—Ä“õ–∞–ª–∏ —ë–∫–∏ ID –±–∏–ª–∞–Ω —é–±–æ—Ä–∏–Ω–≥!")
        return

    # üìå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ —ë–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ –±–µ–∫–æ—Ä “õ–∏–ª–∏—à
    update_write_access(user_id, chat_id, False)

    # ‚úÖ –ñ–∞–≤–æ–± —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∏—à
    user_mention = f"<a href='tg://user?id={user_id}'>{html.escape(str(user_id))}</a>"
    await update.message.reply_text(
        f"üö´ {user_mention} –¥–∞–Ω —ë–∑–∏—à “≥—É“õ—É“õ–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞–Ω–¥–∏!", 
        parse_mode="HTML"
    )

# üõ† 3Ô∏è‚É£ –ì—É—Ä—É“≥–≥–∞ —é–±–æ—Ä–∏–ª–≥–∞–Ω “≤–∞–≤–æ–ª–∞–ª–∞—Ä–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∫ —û—á–∏—Ä–∏—à
async def delete_invite_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # “≤–∞–≤–æ–ª–∞ –±–æ—Ä-–π—û“õ–ª–∏–≥–∏–Ω–∏ REGEX –±–∏–ª–∞–Ω —Ç–µ–∫—à–∏—Ä–∏—à
    if re.search(r"(https?:\/\/[^\s]+|t\.me\/[a-zA-Z0-9_]+)", update.message.text, re.IGNORECASE):
        try:
            await update.message.delete()
        except Exception as e:
            print(f"‚ùå –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")

        await update.message.reply_text("üö´ –ì—É—Ä—É“≥–¥–∞ “≥–∞–≤–æ–ª–∞–ª–∞—Ä–Ω–∏ —é–±–æ—Ä–∏—à –º—É–º–∫–∏–Ω —ç–º–∞—Å!")

# –ë—É–π—Ä—É“õ–ª–∞—Ä–≥–∞ –∂–∞–≤–æ–± “õ–∞–π—Ç–∞—Ä–≥–∞–Ω–¥–∞–Ω —Å—û–Ω–≥ —É–ª–∞—Ä–Ω–∏ –≤–∞ –∂–∞–≤–æ–± —Ö–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
async def command_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    command = update.message.text

    # –ñ–∞–≤–æ–± —Ö–∞–±–∞—Ä–∏–Ω–∏ —é–±–æ—Ä–∏—à
    response_message = await update.message.reply_text(f"“≤–æ–∑–∏—Ä–¥–∞ {command} –±—É–π—Ä—É“ì–∏–Ω–∏ –º–∞–≤–∂—É–¥ —ç–º–∞—Å!")

    await update.message.delete()  # –ë—É–π—Ä—É“õ —Ö–∞–±–∞—Ä–∏–Ω–∏ —û—á–∏—Ä–∏—à

    await asyncio.sleep(5)  # 5 —Å–æ–Ω–∏—è–¥–∞ —û—á–∏—Ä–∏—à
    try:
        await response_message.delete()  # –ñ–∞–≤–æ–± —Ö–∞–±–∞—Ä–∏–Ω–∏ —û—á–∏—Ä–∏—à
    except Exception as e:
        print(f"‚ùå –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫: {e}")

# –ë–æ—Ç–Ω–∏ –∏—à–≥–∞ —Ç—É—à–∏—Ä–∏—à
def main():
    init_db()  # ‚úÖ SQL –∂–∞–¥–≤–∞–ª–∏–Ω–∏ —è—Ä–∞—Ç–∏—à **–§–ê“ö–ê–¢ –ë–ò–† –ú–ê–†–¢–ê**

    # üìå –ë–æ—Ç–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∏—à
    app = Application.builder().token(TOKEN).build()

    # üîπ –ë–æ—à–ª–∞–Ω“ì–∏—á –∫–æ–º–∞–Ω–¥–∞
    app.add_handler(CommandHandler("start", start))

    app.add_handler(CommandHandler("chatid", get_chat_info))

    # üìå –ë—É–π—Ä—É“õ–Ω–∏ “õ—û—à–∏—à
    app.add_handler(CommandHandler("broadcast", broadcast))

    app.add_handler(CommandHandler("startbroadcast", start_broadcast))

    # üîπ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–π—Ä—É“ì–∏–Ω–∏ “õ—û—à–∏—à
    app.add_handler(CommandHandler("stats", stats))
    
    # üîπ /stats –±—É–π—Ä—É“ì–∏–Ω–∏ “õ—û—à–∏—à
    app.add_handler(CommandHandler("groupstats", group_stats, filters=filters.ChatType.GROUPS))

    #app.add_handler(CommandHandler("stats", user_stats, filters=filters.ChatType.PRIVATE))

    # üîπ –ú–µ–Ω–∏–Ω–≥ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä–∏–º –±—É–π—Ä—É“ì–∏
    app.add_handler(CommandHandler("myreferrals", my_referrals))
    
    # üîπ –õ–∏–º–∏—Ç –ø–∞–Ω–µ–ª
    app.add_handler(CommandHandler("set_limit", set_limit, filters=filters.ChatType.GROUP | filters.ChatType.SUPERGROUP)) # –ë—É –±–æ—Ç–Ω–∏ —Ñ–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ –∏—à–ª–∞—à–∏–≥–∞ —á–µ–∫–ª–æ–≤ “õ—û—è–¥–∏.

    # ‚úÖ –Å–∑–∏—à “≥—É“õ—É“õ–∏–Ω–∏ “õ—û–ª–¥–∞ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à —É—á—É–Ω –±—É–π—Ä—É“õ “õ—û—à–∏—à
    app.add_handler(CommandHandler("grantwrite", grant_write))
    app.add_handler(CommandHandler("revoke", revoke_write))

    # üîπ –Ø–Ω–≥–∏ –∞—ä–∑–æ —Ö–∞–±–∞—Ä–ª–∞—Ä–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, new_member))

    # üîπ –ß–∏“õ–∏—à —Ö–∞–±–∞—Ä–∏–Ω–∏ —û—á–∏—Ä–∏—à
    app.add_handler(MessageHandler(filters.StatusUpdate.LEFT_CHAT_MEMBER, delete_join_message))  

    # app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, delete_join_message))  # –Ø–Ω–≥–∏ –∞—ä–∑–æ —Ö–∞–±–∞—Ä–∏–Ω–∏ —û—á–∏—Ä–∏—à
    app.add_handler(MessageHandler(filters.ALL, handle_message))

    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_broadcast_message))

    # –ë–∞—Ä—á–∞ –±—É–π—Ä—É“õ–ª–∞—Ä–Ω–∏ —É—à–ª–∞–± –æ–ª–∞–¥–∏–≥–∞–Ω —Ö—ç–Ω–¥–ª–µ—Ä
    app.add_handler(MessageHandler(filters.COMMAND, command_handler))

    app.add_handler(ChatMemberHandler(handle_chat_member_update))

    # üîπ –ë–æ—à“õ–∞—Ä—É–≤ —Ç—É–≥–º–∞–ª–∞—Ä–∏
    #app.add_handler(CallbackQueryHandler(button_handler))  

    app.add_handler(conv_handler)

    # "–ë–æ—à“õ–∞ —Ä–∞“õ–∞–º —Ç–∞–Ω–ª–∞—à" —Ç—É–≥–º–∞—Å–∏ —É—á—É–Ω —Ö—ç–Ω–¥–ª–µ—Ä
    app.add_handler(CallbackQueryHandler(button_handler, pattern=r"^(limit_\d+|change_limit|custom_limit|write_limit|close_panel)$"))

    # "–ö—û–ø–∞–π—Ç–∏—Ä–∏—à", "–û–∑–∞–π—Ç–∏—Ä–∏—à" –≤–∞ "–ë–µ–∫–æ—Ä “õ–∏–ª–∏—à" —Ç—É–≥–º–∞–ª–∞—Ä–∏ —É—á—É–Ω —Ö—ç–Ω–¥–ª–µ—Ä
    app.add_handler(CallbackQueryHandler(adjust_limit, pattern="^(increase_limit|decrease_limit|confirm_limit|cancel_limit)$"))

    # üîπ “≤–∞–≤–æ–ª–∞–ª–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à —Ñ–∏–ª—å—Ç—Ä–ª–∞—Ä–∏
    link_filter = filters.TEXT & filters.Regex(r"(https?://[^\s]+|t\.me/[^\s]+)")
    app.add_handler(MessageHandler(link_filter, delete_invite_link))
    app.add_handler(MessageHandler(filters.Entity("url"), delete_invite_link))

    # üîπ –û—Ö–∏—Ä–∏–¥–∞ –±–∞—Ä—á–∞ –º–∞—Ç–Ω–ª–∏ —Ö–∞–±–∞—Ä–ª–∞—Ä–Ω–∏ –∏—à–ª–æ–≤—á–∏ “≥–∞–Ω–¥–ª–µ—Ä
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∏—à–≥–∞ —Ç—É—à–¥–∏!")
    app.run_polling()

if __name__ == "__main__":
    main()
